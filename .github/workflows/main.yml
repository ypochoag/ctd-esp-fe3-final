name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3
      - name: Install, build, and upload your site
        uses: withastro/action@v1
        # with:
        # path: . # The root location of your Astro project inside the repository. (optional)
        # node-version: 18 # The specific version of Node that should be used to build your site. Defaults to 18. (optional)
        # package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2.3
        with:
          publish-dir: ./dist # Cambia a la carpeta donde tu proyecto genera los archivos para despliegue
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}



# name: Deploy to Netlify

# on:
#   push:
#     branches: [main] # Ajusta la rama según tu flujo de trabajo

#   workflow_dispatch:

# permissions:
#   contents: read

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout your repository using git
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18' # Cambia a la versión que necesites

#       - name: Install dependencies
#         run: npm install # Cambia a `yarn install` o `pnpm install` si usas otro gestor

#       - name: Build project
#         run: npm run build # Cambia el comando si usas otro para construir tu proyecto

#       - name: Deploy to Netlify
#         uses: nwtgck/actions-netlify@v1.2.3
#         with:
#           publish-dir: ./dist # Cambia a la carpeta donde tu proyecto genera los archivos para despliegue
#           production-deploy: true
#         env:
#           NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#           NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
